version: "3"
services:
  database:
    image: postgres:latest
    volumes:
      - directus-database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "directus"
      POSTGRES_USER: ${POSTGRES_DB_USER?POSTGRES_DB_USER not set}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD?POSTGRES_DB_PASSWORD not set}
    networks:
      - local
    restart: unless-stopped

  cache:
    image: redis:6
    networks:
      - local
    restart: unless-stopped

  directus:
    image: directus/directus:10.4.0
    environment:
      # https://www.uuidgenerator.net/version4
      KEY: "random key"
      SECRET: "random secret"

      DB_CLIENT: "pg"
      DB_HOST: "database"
      DB_PORT: "5432"
      DB_DATABASE: "directus"
      DB_USER: ${POSTGRES_DB_USER?POSTGRES_DB_USER not set}
      DB_PASSWORD: ${POSTGRES_DB_PASSWORD?POSTGRES_DB_PASSWORD not set}
      
      CACHE_ENABLED: "true"
      CACHE_STORE: "redis"
      REDIS: "redis://cache:6379"

      ADMIN_EMAIL: "admin@example.com" # CHANGE
      ADMIN_PASSWORD: "d1r3ctu5" # CHANGE

      PUBLIC_URL: "https://`${DIRECTUS_8055_DOMAIN?DIRECTUS_8055_DOMAIN not set}`"

      # EMAIL: SMTP
      EMAIL_FROM: "example@example.com" # CHANGE
      EMAIL_TRANSPORT: "smtp"
      # EMAIL: SMTP: Relay
      EMAIL_SMTP_HOST: "smtp.server.com" # CHANGE
      EMAIL_SMTP_PORT: "587"
      EMAIL_SMTP_USER: "smtp user" # CHANGE
      EMAIL_SMTP_PASSWORD: "smtp password" # CHANGE

      # OAUTH
      AUTH_PROVIDERS: "google"
      # OAUTH: GOOGLE: Callback: `/auth/login/google/callback`
      AUTH_GOOGLE_DRIVER: "openid"
      AUTH_GOOGLE_ISSUER_URL: "https://accounts.google.com/.well-known/openid-configuration"
      AUTH_GOOGLE_IDENTIFIER_KEY: "email"
      AUTH_GOOGLE_CLIENT_ID: "enter client id" # CHANGE
      AUTH_GOOGLE_CLIENT_SECRET: "enter client secret" # CHANGE
      AUTH_GOOGLE_ICON: "google"
      AUTH_GOOGLE_LABEL: "Google"
      # Google OAuth: On signin
      AUTH_GOOGLE_ALLOW_PUBLIC_REGISTRATION: "true"
      AUTH_GOOGLE_DEFAULT_ROLE_ID: "add default role" # CHANGE
    labels:
      traefik.enable: true
      traefik.docker.network: traefik-public

      # ROUTER [MAIN] 8055
      traefik.http.services.MAIN-8055-service.loadbalancer.server.port: 8055

      traefik.http.routers.MAIN-8055-http.service: MAIN-8055-service
      traefik.http.routers.MAIN-8055-http.entrypoints: http
      traefik.http.routers.MAIN-8055-http.rule: Host(`${DIRECTUS_8055_DOMAIN?DIRECTUS_8055_DOMAIN not set}`)

      traefik.http.routers.MAIN-8055-https.service: MAIN-8055-service
      traefik.http.routers.MAIN-8055-https.entrypoints: https
      traefik.http.routers.MAIN-8055-https.rule: Host(`${DIRECTUS_8055_DOMAIN?DIRECTUS_8055_DOMAIN not set}`)
      traefik.http.routers.MAIN-8055-https.tls: true
      traefik.http.routers.MAIN-8055-https.tls.certresolver: letsencrypt
      
      traefik.http.routers.MAIN-8055-http.middlewares: REDI-DIREREDI-redirect

      # MIDDLEWARE [REDI-DIREREDI]
      traefik.http.middlewares.REDI-DIREREDI-redirect.redirectscheme.scheme: https
      traefik.http.middlewares.REDI-DIREREDI-redirect.redirectscheme.permanent: true
    depends_on:
      - cache
      - database
    networks:
      - traefik-public
      - local
    volumes:
      - directus:/directus/uploads
      # If you want to load extensions from the host
      # - ./extensions:/directus/extensions
    restart: unless-stopped

networks:
  traefik-public:
    external: true
  local:
    driver: bridge

volumes:
  directus-database:
  directus:
